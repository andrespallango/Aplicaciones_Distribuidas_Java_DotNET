/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ec.edu.monster.vista;

import ec.edu.monster.controlador.ServidorControlador;
import ec.edu.monster.controlador.ClientesControlador;
import ec.edu.monster.modelo.Cliente;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author USER
 */
public class FormularioPrincipal extends javax.swing.JFrame {
      
    SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss a");
    Thread t;
    ServidorControlador serverThread;
    
    public Cliente clientes = new Cliente();
    public Cliente clientesArchivos = new Cliente();
    
    ServerSocket servidor;     
    public FormularioPrincipal() {
        initComponents();
    }
    
    public void imprimirMensaje(String msg){
        Date date = new Date();
        jTextArea1.append(sdf.format(date) +": "+ msg +"\n");
        jTextArea1.setCaretPosition(jTextArea1.getText().length() - 1);
    }
    
    public void añadirSockets(Socket socket){
        try {
            clientes.listaSockets.add(socket);
            imprimirMensaje("[listaSockets]: Socket añadido");
        } catch (Exception e) { imprimirMensaje("[setSocketList]: "+ e.getMessage()); }
    }
    public void añadirClientes(String nombreUsuario){
        try {
            clientes.listaClientes.add(nombreUsuario);
            imprimirMensaje("[listaClientes]: Cliente añadido");
        } catch (Exception e) { imprimirMensaje("[listaClientes]: "+ e.getMessage()); }
    }
    public void añadirClientesArchivos(String user){
        try {
            clientesArchivos.listaClientes.add(user);
        } catch (Exception e) { }
    }
    
    public void añadirSocketsClientesArchivos(Socket soc){
        try {
            clientesArchivos.listaSockets.add(soc);
        } catch (Exception e) { }
    }
    
    public Socket obtenerClientes(String cliente){
        Socket tsoc = null;
        for(int x=0; x < clientes.listaClientes.size(); x++){
            if(clientes.listaClientes.get(x).equals(cliente)){
                tsoc = (Socket) clientes.listaSockets.get(x);
                break;
            }
        }
        return tsoc;
    }
    public void quitarClienteLista(String cliente){
        try {
            for(int x=0; x < clientes.listaClientes.size(); x++){
                if(clientes.listaClientes.elementAt(x).equals(cliente)){
                    clientes.listaClientes.removeElementAt(x);
                    clientes.listaSockets.removeElementAt(x);
                    imprimirMensaje("[Salió]: "+ cliente);
                    break;
                }
            }
        } catch (Exception e) {
            imprimirMensaje("[RemovedException]: "+ e.getMessage());
        }
    }
    
    public Socket obtenerSocketsClientesArchivos(String nombreUsuario){
        Socket tsoc = null;
        for(int x=0; x < clientesArchivos.listaClientes.size(); x++){
            if(clientesArchivos.listaClientes.elementAt(x).equals(nombreUsuario)){
                tsoc = (Socket) clientesArchivos.listaSockets.elementAt(x);
                break;
            }
        }
        return tsoc;
    }
        public void quitarClienteArchivo(String nombreUsuario){
        for(int x=0; x < clientesArchivos.listaClientes.size(); x++){
            if(clientesArchivos.listaClientes.elementAt(x).equals(nombreUsuario)){
                try {
                    Socket rSock = obtenerSocketsClientesArchivos(nombreUsuario);
                    if(rSock != null){
                        rSock.close();
                    }
                    clientesArchivos.listaClientes.removeElementAt(x);
                    clientesArchivos.listaSockets.removeElementAt(x);
                    imprimirMensaje("[FileSharing]: Cancelar "+ nombreUsuario);
                } catch (IOException e) {
                    imprimirMensaje("[FileSharing]: "+ e.getMessage());
                    imprimirMensaje("[FileSharing]: No se puede cancelar "+ nombreUsuario);
                }
                break;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Monster Chat");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(52, 105, 177));
        jLabel1.setText("Puerto");

        jTextField1.setText("4444");

        jButton1.setBackground(new java.awt.Color(52, 105, 177));
        jButton1.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Iniciar Servidor");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(193, 56, 56));
        jButton2.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Detener sesión");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(52, 105, 177));
        jTextArea1.setColumns(20);
        jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/servidor_2.jpg"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Bahnschrift", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(52, 105, 177));
        jLabel3.setText("SERVIDOR");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(jLabel1))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(jLabel3)))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int port = Integer.parseInt(jTextField1.getText());
        serverThread = new ServidorControlador(port, this);
        t = new Thread(serverThread);
        t.start();

        new Thread(new ClientesControlador(this)).start();

        jButton1.setEnabled(false);
        jButton2.setEnabled(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(null, "¿Realmente desea desconectar el Servidor?");
        if(confirm == 0){
            serverThread.stop();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
      
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularioPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

   
}
